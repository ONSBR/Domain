const Sequelize = require('sequelize');

const sequelize = new Sequelize('app', 'postgres', '', {
  host: 'localhost',
  dialect: 'postgres',
  pool: {
    max: 5,
    min: 0,
    acquire: 30000,
    idle: 10000
  },
  logging: false,
  operatorsAliases: true
  
});


var model = {};

//Declaring models with Sequelize
{{#each model}}
model["{{@key}}"] = sequelize.define('{{@key}}', {
    rid: { type: Sequelize.UUID , primaryKey: true, defaultValue: Sequelize.UUIDV4   },
    id: { type: Sequelize.UUID,  defaultValue: Sequelize.UUIDV4  },
    instance_id: { type: Sequelize.UUID },
    {{#join . ","}}
    {{name}}: { type: {{type}} } {{/join}}
    , data_inicio_vigencia:{ type: Sequelize.DATE, defaultValue: Sequelize.NOW },
    data_fim_vigencia:{ type: Sequelize.DATE, defaultValue: new Date("9999-12-31") }
},{
    timestamps: false,
    freezeTableName: true,
    scopes:{
      vigencia: function (referencia){
        return {
          where: {
            data_inicio_vigencia: {
              $lte: referencia
            },
            data_fim_vigencia:{
              $gte: referencia
            }
          }
        }
      }
    },
    indexes: [
        {
            unique: true,
            fields: ['rid', 'id']
        }
    ]   
});

{{/each}}

{{#each relations}}

{{#eq this.[1] "hasMany"}}
model["{{0}}_has_{{2}}"] = sequelize.define('{{0}}_has_{{2}}', {
  rid: { type: Sequelize.UUID , primaryKey: true, defaultValue: Sequelize.UUIDV4   },
  {{0}}Id:{ 
    type: Sequelize.UUID
  },
  {{2}}Id:{ 
    type: Sequelize.UUID

  }  
},{
  timestamps: false,
  freezeTableName: true  
});
{{/eq}}

{{/each}}




//Sincronize database
sequelize.sync();


module.exports = model;